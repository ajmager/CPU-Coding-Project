//32:5 bit encoder

module encoder_32_5(output reg [4:0] Code,input [32:0] Data);

always @(Data)
case (Data)
32'h01	:	Code = 0;
32'h02	:	Code = 0;
32'h04	:	Code = 0;
32'h08	:	Code = 0;
32'h10	:	Code = 0;
32'h20	:	Code = 0;
32'h40	:	Code = 0;
32'h80	:	Code = 0; 
32'h100	:
32'h200	:
32'h400	:
32'h800	:
32'h1000	:
32'h2000	:
32'h4000	:
32'h8000	:
32'h10000	:
32'h20000	:
32'h40000	:
32'h80000	:
32'h100000	:
32'h200000	:
32'h400000	:
32'h800000	:
32'h1000000	:
32'h2000000	:
32'h4000000	:
32'h8000000	:
32'h10000000	:
32'h20000000	:
32'h40000000	:
32'h80000000	:

endcase
endmodule

/*
32'h01: o = 3'b00000;
32'h01: o = 3'b00001;
32'h01: o = 3'b00010;
32'h01: o = 3'b00011;
32'h01: o = 3'b00100;
32'h01: o = 3'b00101;
32'h01: o = 3'b00110;
32'h01: o = 3'b00111;
32'h01: o = 3'b01000;
32'h01: o = 3'b01001;
32'h01: o = 3'b01010;
32'h01: o = 3'b01011;
32'h01: o = 3'b01100;
32'h01: o = 3'b01101;
32'h01: o = 3'b01110;
32'h01: o = 3'b01111;
32'h01: o = 3'b10000;
32'h01: o = 3'b10001;
32'h01: o = 3'b10010;
32'h01: o = 3'b10011;
32'h01: o = 3'b10100;
32'h01: o = 3'b10101;
32'h01: o = 3'b10110;
32'h01: o = 3'b10111;
32'h01: o = 3'b11000;
32'h01: o = 3'b11001;
32'h01: o = 3'b11010;
32'h01: o = 3'b11011;
32'h01: o = 3'b11100;
32'h01: o = 3'b11101;
32'h01: o = 3'b11110;
32'h01: o = 3'b11111;
default: o = 3'bxxxxx;
*/